pipeline {
    agent {
        label "terraform-exec"
    }
    stages {
        stage('TF init & validate') {
            steps {
                 container('terraform') {
                sh '''cd simple-example-create
                terraform init
                terraform validate'''
                 }
            }
        }
        stage('TF plan') {
            steps {
                 container('terraform') {
                  sh '''cd simple-example-create
                terraform plan -var project_id=$PROJECT_ID --out=test.out'''
                 }
            }
        }
            stage('Wait for Appproval') {
              when { branch "master" }
      steps {
        script {
          def userInput = input(id: 'confirm', message: 'Apply Terraform?', parameters: [ [$class: 'BooleanParameterDefinition', defaultValue: false, description: 'Apply terraform', name: 'confirm'] ])
        }
      }
    }
        stage('TF Apply') {
          when { branch "master" }
      steps {
        container('terraform') {
          sh '''cd simple-example-create
          terraform apply -var project_id=$PROJECT_ID -input=false test.out'''
        }
      }
    }
    }
}
